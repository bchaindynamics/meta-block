{"ast":null,"code":"import _slicedToArray from \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/src/App.js\";\nimport React, { useState } from 'react'; // eslint-disable-next-line no-unused-vars\n\nimport { useWeb3Network, useEphemeralKey, useWeb3Injected } from '@openzeppelin/network/react';\nimport Web3Info from './components/Web3Info/index.js';\nimport Counter from './components/Counter/index.js';\nimport styles from './App.module.scss'; // eslint-disable-next-line no-unused-vars\n\nvar infuraToken = process.env.REACT_APP_INFURA_TOKEN || '95202223388e49f48b423ea50a70e336';\n\nfunction App() {\n  // get ephemeralKey\n  // eslint-disable-next-line no-unused-vars\n  var signKey = useEphemeralKey(); // get GSN web3\n  // const context = useWeb3Network(`wss://rinkeby.infura.io/ws/v3/${infuraToken}`, {\n  //   pollInterval: 15 * 1000,\n  //   gsn: {\n  //     signKey,\n  //   },\n  // });\n\n  var context = useWeb3Network('http://127.0.0.1:8545', {\n    gsn: {\n      dev: true,\n      signKey: signKey\n    }\n  }); // load Counter json artifact\n\n  var counterJSON = undefined;\n\n  try {\n    // see https://github.com/OpenZeppelin/solidity-loader\n    counterJSON = require('../../contracts/Counter.sol');\n  } catch (e) {\n    console.log(e);\n  } // load Counter instance\n\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      counterInstance = _useState2[0],\n      setCounterInstance = _useState2[1];\n\n  var deployedNetwork = undefined;\n\n  if (!counterInstance && context && counterJSON && counterJSON.networks && context.networkId) {\n    deployedNetwork = counterJSON.networks[context.networkId.toString()];\n\n    if (deployedNetwork) {\n      setCounterInstance(new context.lib.eth.Contract(counterJSON.abi, deployedNetwork.address));\n    }\n  }\n\n  function renderNoWeb3() {\n    return React.createElement(\"div\", {\n      className: styles.loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Web3 Provider Not Found\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Please, install and run Ganache.\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, !context.lib && renderNoWeb3(), React.createElement(\"div\", {\n    className: styles.contracts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.widgets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Web3Info, {\n    title: \"Web3 Provider\",\n    context: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Counter, Object.assign({}, context, {\n    JSON: counterJSON,\n    instance: counterInstance,\n    deployedNetwork: deployedNetwork,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/src/App.js"],"names":["React","useState","useWeb3Network","useEphemeralKey","useWeb3Injected","Web3Info","Counter","styles","infuraToken","process","env","REACT_APP_INFURA_TOKEN","App","signKey","context","gsn","dev","counterJSON","undefined","require","e","console","log","counterInstance","setCounterInstance","deployedNetwork","networks","networkId","toString","lib","eth","Contract","abi","address","renderNoWeb3","loader","wrapper","contracts","widgets"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport { useWeb3Network, useEphemeralKey, useWeb3Injected } from '@openzeppelin/network/react';\n\n\n\nimport Web3Info from './components/Web3Info/index.js';\nimport Counter from './components/Counter/index.js';\n\nimport styles from './App.module.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst infuraToken = process.env.REACT_APP_INFURA_TOKEN || '95202223388e49f48b423ea50a70e336';\n\nfunction App() {\n  // get ephemeralKey\n  // eslint-disable-next-line no-unused-vars\n  const signKey = useEphemeralKey();\n\n  // get GSN web3\n  // const context = useWeb3Network(`wss://rinkeby.infura.io/ws/v3/${infuraToken}`, {\n  //   pollInterval: 15 * 1000,\n  //   gsn: {\n  //     signKey,\n  //   },\n  // });\n\n  const context = useWeb3Network('http://127.0.0.1:8545', {\n    gsn: {\n      dev: true,\n      signKey,\n    },\n  });\n\n  // load Counter json artifact\n  let counterJSON = undefined;\n  try {\n    // see https://github.com/OpenZeppelin/solidity-loader\n    counterJSON = require('../../contracts/Counter.sol');\n  } catch (e) {\n    console.log(e);\n  }\n\n  // load Counter instance\n  const [counterInstance, setCounterInstance] = useState(undefined);\n  let deployedNetwork = undefined;\n  if (!counterInstance && context && counterJSON && counterJSON.networks && context.networkId) {\n    deployedNetwork = counterJSON.networks[context.networkId.toString()];\n    if (deployedNetwork) {\n      setCounterInstance(new context.lib.eth.Contract(counterJSON.abi, deployedNetwork.address));\n    }\n  }\n\n  function renderNoWeb3() {\n    return (\n      <div className={styles.loader}>\n        <h3>Web3 Provider Not Found</h3>\n        <p>Please, install and run Ganache.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.App}>\n \n   \n      <div className={styles.wrapper}>\n        {!context.lib && renderNoWeb3()}\n        <div className={styles.contracts}>\n        \n          <div className={styles.widgets}>\n            <Web3Info title=\"Web3 Provider\" context={context} />\n            <Counter {...context} JSON={counterJSON} instance={counterInstance} deployedNetwork={deployedNetwork} />\n          </div>\n        </div>\n      </div>\n   \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}