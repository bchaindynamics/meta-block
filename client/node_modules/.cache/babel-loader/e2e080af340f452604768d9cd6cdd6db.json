{"ast":null,"code":"var GSNProvider = require('./GSNProvider.js');\n/**\n * Returns a new web3 instance backed by a GSNProvider\n * @param {*} baseWeb3 wraps the provider of this instance on a GSN one\n * @param {*} options useGSN, signKey, other RelayClient options\n */\n\n\nfunction withGSN(baseWeb3) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var gsnProvider = isGSNProvider(baseWeb3.currentProvider) ? baseWeb3.currentProvider : new GSNProvider(baseWeb3.currentProvider, options);\n  return new baseWeb3.constructor(gsnProvider);\n}\n/**\n * Modifies a web3 instance to use a GSNProvider\n * @param {*} web3 instance to modify\n * @param {*} options useGSN, signKey, other RelayClient options\n */\n\n\nfunction setGSN(web3) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (isGSNProvider(web3.currentProvider)) return web3;\n  var gsnProvider = new GSNProvider(web3.currentProvider, options);\n  web3.setProvider(gsnProvider);\n  return web3;\n}\n\nfunction isGSNProvider(provider) {\n  return provider.isGSNProvider || provider.constructor.name === 'RelayProvider';\n}\n\nmodule.exports = {\n  setGSN: setGSN,\n  withGSN: withGSN,\n  isGSNProvider: isGSNProvider\n};","map":null,"metadata":{},"sourceType":"script"}