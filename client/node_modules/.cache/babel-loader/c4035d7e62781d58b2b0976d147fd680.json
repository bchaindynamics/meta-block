{"ast":null,"code":"import _regeneratorRuntime from \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/src/components/Counter/index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PublicAddress, Button, Loader } from 'rimble-ui';\nimport styles from './Counter.module.scss';\nimport getTransactionReceipt from '../../utils/getTransactionReceipt';\nimport { utils } from '@openzeppelin/gsn-provider';\nvar isRelayHubDeployedForRecipient = utils.isRelayHubDeployedForRecipient,\n    getRecipientFunds = utils.getRecipientFunds;\nexport default function Counter(props) {\n  var instance = props.instance,\n      accounts = props.accounts,\n      lib = props.lib,\n      networkName = props.networkName,\n      networkId = props.networkId,\n      providerName = props.providerName;\n\n  var _ref = instance || {},\n      _address = _ref._address,\n      methods = _ref.methods; // GSN provider has only one key pair\n\n\n  var isGSN = providerName === 'GSN';\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      balance = _useState2[0],\n      setBalance = _useState2[1];\n\n  var getBalance = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var balance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(accounts && accounts.length > 0)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.t1 = lib.utils;\n            _context.next = 4;\n            return lib.eth.getBalance(accounts[0]);\n\n          case 4:\n            _context.t2 = _context.sent;\n            _context.t0 = _context.t1.fromWei.call(_context.t1, _context.t2, 'ether');\n            _context.next = 9;\n            break;\n\n          case 8:\n            _context.t0 = 'Unknown';\n\n          case 9:\n            balance = _context.t0;\n            setBalance(Number(balance));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [accounts, lib.eth, lib.utils]);\n  useEffect(function () {\n    if (!isGSN) getBalance();\n  }, [accounts, getBalance, isGSN, lib.eth, lib.utils, networkId]);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      setIsDeployed = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      funds = _useState6[0],\n      setFunds = _useState6[1];\n\n  var getDeploymentAndFunds = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var isDeployed, _funds;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!instance) {\n              _context2.next = 11;\n              break;\n            }\n\n            if (!isGSN) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 4;\n            return isRelayHubDeployedForRecipient(lib, _address);\n\n          case 4:\n            isDeployed = _context2.sent;\n            setIsDeployed(isDeployed);\n\n            if (!isDeployed) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 9;\n            return getRecipientFunds(lib, _address);\n\n          case 9:\n            _funds = _context2.sent;\n            setFunds(Number(_funds));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [_address, instance, isGSN, lib]);\n  useEffect(function () {\n    getDeploymentAndFunds();\n  }, [getDeploymentAndFunds, instance]);\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      count = _useState8[0],\n      setCount = _useState8[1];\n\n  var getCount = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!instance) {\n              _context3.next = 5;\n              break;\n            }\n\n            _context3.next = 3;\n            return instance.methods.getCounter().call();\n\n          case 3:\n            response = _context3.sent;\n            // Update state with the result.\n            setCount(response);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })), [instance]);\n  useEffect(function () {\n    getCount();\n  }, [getCount, instance]);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sending = _useState10[0],\n      setSending = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      transactionHash = _useState12[0],\n      setTransactionHash = _useState12[1];\n\n  var increase =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(number) {\n      var tx, receipt;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n\n              if (sending) {\n                _context4.next = 13;\n                break;\n              }\n\n              setSending(true);\n              _context4.next = 5;\n              return instance.methods.increaseCounter(number).send({\n                from: accounts[0]\n              });\n\n            case 5:\n              tx = _context4.sent;\n              _context4.next = 8;\n              return getTransactionReceipt(lib, tx.transactionHash);\n\n            case 8:\n              receipt = _context4.sent;\n              setTransactionHash(receipt.transactionHash);\n              getCount();\n              getDeploymentAndFunds();\n              setSending(false);\n\n            case 13:\n              _context4.next = 19;\n              break;\n\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              setSending(false);\n              console.log(_context4.t0);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 15]]);\n    }));\n\n    return function increase(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var decrease =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(number) {\n      var receipt;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n\n              if (sending) {\n                _context5.next = 10;\n                break;\n              }\n\n              setSending(true);\n              _context5.next = 5;\n              return instance.methods.decreaseCounter(number).send({\n                from: accounts[0]\n              });\n\n            case 5:\n              receipt = _context5.sent;\n              setTransactionHash(receipt.transactionHash);\n              getCount();\n              getDeploymentAndFunds();\n              setSending(false);\n\n            case 10:\n              _context5.next = 16;\n              break;\n\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](0);\n              setSending(false);\n              console.log(_context5.t0);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 12]]);\n    }));\n\n    return function decrease(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  function renderNoDeploy() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Can't Load Deployed Counter Instance\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Please, run `oz create` to deploy an counter instance.\"));\n  }\n\n  function renderNoFunds() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"The recipient has no funds\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Please, run:\"), React.createElement(\"div\", {\n      className: styles.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"npx oz-gsn fund-recipient --recipient \", _address))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"to fund the recipient on local network.\"));\n  }\n\n  function renderNoBalance() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Fund your Metamask account\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"You need some ETH to be able to send transactions. Please, run:\"), React.createElement(\"div\", {\n      className: styles.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"openzeppelin transfer --to \", accounts[0]))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"to fund your Metamask.\"));\n  }\n\n  function renderTransactionHash() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Transaction\", ' ', React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://\".concat(networkName, \".etherscan.io/tx/\").concat(transactionHash),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, transactionHash.substr(0, 6))), ' ', \"has been mined on \", networkName, \" network.\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.counter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \" Counter Instance \"), lib && !instance && renderNoDeploy(), lib && instance && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.dataPoint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Instance address:\"), React.createElement(\"div\", {\n    className: styles.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(PublicAddress, {\n    label: \"\",\n    address: _address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: styles.dataPoint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Counter Value:\"), React.createElement(\"div\", {\n    className: styles.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, count)), isGSN && React.createElement(\"div\", {\n    className: styles.dataPoint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Recipient Funds:\"), React.createElement(\"div\", {\n    className: styles.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, lib.utils.fromWei(funds.toString(), 'ether'), \" ETH\")), isGSN && !funds && renderNoFunds(), !isGSN && !balance && renderNoBalance(), (!!funds || !!balance) && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Counter Actions\")), React.createElement(\"div\", {\n    className: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return increase(1);\n    },\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, sending ? React.createElement(Loader, {\n    className: styles.loader,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \" Increase Counter by 1\")), React.createElement(Button, {\n    onClick: function onClick() {\n      return decrease(1);\n    },\n    disabled: !(methods && methods.decreaseCounter),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, sending ? React.createElement(Loader, {\n    className: styles.loader,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \" Decrease Counter by 1\")))), transactionHash && networkName !== 'Private' && renderTransactionHash()));\n}","map":{"version":3,"sources":["/home/pranshu_ubuntu/Documents/starter-kit-gsn/client/src/components/Counter/index.js"],"names":["React","useState","useEffect","useCallback","PublicAddress","Button","Loader","styles","getTransactionReceipt","utils","isRelayHubDeployedForRecipient","getRecipientFunds","Counter","props","instance","accounts","lib","networkName","networkId","providerName","_address","methods","isGSN","balance","setBalance","getBalance","length","eth","fromWei","Number","setIsDeployed","funds","setFunds","getDeploymentAndFunds","isDeployed","count","setCount","getCount","getCounter","call","response","sending","setSending","transactionHash","setTransactionHash","increase","number","increaseCounter","send","from","tx","receipt","console","log","decrease","decreaseCounter","renderNoDeploy","renderNoFunds","code","renderNoBalance","renderTransactionHash","substr","counter","dataPoint","label","value","toString","buttons","loader"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PublicAddress, Button, Loader } from 'rimble-ui';\n\nimport styles from './Counter.module.scss';\n\nimport getTransactionReceipt from '../../utils/getTransactionReceipt';\nimport { utils } from '@openzeppelin/gsn-provider';\nconst { isRelayHubDeployedForRecipient, getRecipientFunds } = utils;\n\nexport default function Counter(props) {\n  const { instance, accounts, lib, networkName, networkId, providerName } = props;\n  const { _address, methods } = instance || {};\n\n  // GSN provider has only one key pair\n  const isGSN = providerName === 'GSN';\n\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    let balance =\n      accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(Number(balance));\n  }, [accounts, lib.eth, lib.utils]);\n\n  useEffect(() => {\n    if (!isGSN) getBalance();\n  }, [accounts, getBalance, isGSN, lib.eth, lib.utils, networkId]);\n\n  const [, setIsDeployed] = useState(false);\n  const [funds, setFunds] = useState(0);\n\n  const getDeploymentAndFunds = useCallback(async () => {\n    if (instance) {\n      if (isGSN) {\n        // if GSN check how much funds recipient has\n        const isDeployed = await isRelayHubDeployedForRecipient(lib, _address);\n\n        setIsDeployed(isDeployed);\n        if (isDeployed) {\n          const funds = await getRecipientFunds(lib, _address);\n          setFunds(Number(funds));\n        }\n      }\n    }\n  }, [_address, instance, isGSN, lib]);\n\n  useEffect(() => {\n    getDeploymentAndFunds();\n  }, [getDeploymentAndFunds, instance]);\n\n  const [count, setCount] = useState(0);\n\n  const getCount = useCallback(async () => {\n    if (instance) {\n      // Get the value from the contract to prove it worked.\n      const response = await instance.methods.getCounter().call();\n      // Update state with the result.\n      setCount(response);\n    }\n  }, [instance]);\n\n  useEffect(() => {\n    getCount();\n  }, [getCount, instance]);\n\n  const [sending, setSending] = useState(false);\n  const [transactionHash, setTransactionHash] = useState('');\n\n  const increase = async number => {\n    try {\n      if (!sending) {\n        setSending(true);\n\n        const tx = await instance.methods.increaseCounter(number).send({ from: accounts[0] });\n        const receipt = await getTransactionReceipt(lib, tx.transactionHash);\n        setTransactionHash(receipt.transactionHash);\n\n        getCount();\n        getDeploymentAndFunds();\n\n        setSending(false);\n      }\n    } catch (e) {\n      setSending(false);\n      console.log(e);\n    }\n  };\n\n  const decrease = async number => {\n    try {\n      if (!sending) {\n        setSending(true);\n\n        const receipt = await instance.methods.decreaseCounter(number).send({ from: accounts[0] });\n        setTransactionHash(receipt.transactionHash);\n\n        getCount();\n        getDeploymentAndFunds();\n\n        setSending(false);\n      }\n    } catch (e) {\n      setSending(false);\n      console.log(e);\n    }\n  };\n\n  function renderNoDeploy() {\n    return (\n      <div>\n        <p>\n          <strong>Can't Load Deployed Counter Instance</strong>\n        </p>\n        <p>Please, run `oz create` to deploy an counter instance.</p>\n      </div>\n    );\n  }\n\n  function renderNoFunds() {\n    return (\n      <div>\n        <p>\n          <strong>The recipient has no funds</strong>\n        </p>\n        <p>Please, run:</p>\n        <div className={styles.code}>\n          <code>\n            <small>npx oz-gsn fund-recipient --recipient {_address}</small>\n          </code>\n        </div>\n        <p>to fund the recipient on local network.</p>\n      </div>\n    );\n  }\n\n  function renderNoBalance() {\n    return (\n      <div>\n        <p>\n          <strong>Fund your Metamask account</strong>\n        </p>\n        <p>You need some ETH to be able to send transactions. Please, run:</p>\n        <div className={styles.code}>\n          <code>\n            <small>openzeppelin transfer --to {accounts[0]}</small>\n          </code>\n        </div>\n        <p>to fund your Metamask.</p>\n      </div>\n    );\n  }\n\n  function renderTransactionHash() {\n    return (\n      <div>\n        <p>\n          Transaction{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://${networkName}.etherscan.io/tx/${transactionHash}`}\n          >\n            <small>{transactionHash.substr(0, 6)}</small>\n          </a>{' '}\n          has been mined on {networkName} network.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.counter}>\n      <h3> Counter Instance </h3>\n      {lib && !instance && renderNoDeploy()}\n      {lib && instance && (\n        <React.Fragment>\n          <div className={styles.dataPoint}>\n            <div className={styles.label}>Instance address:</div>\n            <div className={styles.value}>\n              <PublicAddress label=\"\" address={_address} />\n            </div>\n          </div>\n          <div className={styles.dataPoint}>\n            <div className={styles.label}>Counter Value:</div>\n            <div className={styles.value}>{count}</div>\n          </div>\n          {isGSN && (\n            <div className={styles.dataPoint}>\n              <div className={styles.label}>Recipient Funds:</div>\n              <div className={styles.value}>{lib.utils.fromWei(funds.toString(), 'ether')} ETH</div>\n            </div>\n          )}\n          {isGSN && !funds && renderNoFunds()}\n          {!isGSN && !balance && renderNoBalance()}\n\n          {(!!funds || !!balance) && (\n            <React.Fragment>\n              <div className={styles.label}>\n                <strong>Counter Actions</strong>\n              </div>\n              <div className={styles.buttons}>\n                <Button onClick={() => increase(1)} size=\"small\">\n                  {sending ? <Loader className={styles.loader} color=\"white\" /> : <span> Increase Counter by 1</span>}\n                </Button>\n                <Button onClick={() => decrease(1)} disabled={!(methods && methods.decreaseCounter)} size=\"small\">\n                  {sending ? <Loader className={styles.loader} color=\"white\" /> : <span> Decrease Counter by 1</span>}\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {transactionHash && networkName !== 'Private' && renderTransactionHash()}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}